#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ML Product Classifier
"""

import subprocess
import sys
import json

def check_command(command, description):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–∞–Ω–¥—É"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, encoding='utf-8')
        if result.returncode == 0:
            print(f"‚úÖ {description} - OK")
            return True
        else:
            print(f"‚ùå {description} - –ù–ï –ù–ê–ô–î–ï–ù")
            return False
    except Exception as e:
        print(f"‚ùå {description} - –û–®–ò–ë–ö–ê: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ML Product Classifier")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    python_ok = check_command("python --version", "Python")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º pip
    pip_ok = check_command("pip --version", "pip")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Ollama
    ollama_ok = check_command("ollama --version", "Ollama")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏ Ollama
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏ Ollama...")
    try:
        result = subprocess.run("ollama list", shell=True, capture_output=True, text=True, encoding='utf-8')
        if result.returncode == 0:
            models = result.stdout.strip()
            if "t-pro-it-2.0-optimized" in models:
                print("‚úÖ –ú–æ–¥–µ–ª—å t-pro-it-2.0-optimized - –ù–ê–ô–î–ï–ù–ê")
                model_ok = True
            else:
                print("‚ùå –ú–æ–¥–µ–ª—å t-pro-it-2.0-optimized - –ù–ï –ù–ê–ô–î–ï–ù–ê")
                print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ollama create t-pro-it-2.0-optimized -f Modelfile.optimized")
                model_ok = False
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π")
            model_ok = False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–ª–µ–π: {e}")
        model_ok = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    try:
        import psutil
        print("‚úÖ psutil - OK")
        psutil_ok = True
    except ImportError:
        print("‚ùå psutil - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: pip install -r requirements.txt")
        psutil_ok = False
    
    try:
        import tqdm
        print("‚úÖ tqdm - OK")
        tqdm_ok = True
    except ImportError:
        print("‚ùå tqdm - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: pip install -r requirements.txt")
        tqdm_ok = False
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò:")
    
    all_ok = python_ok and pip_ok and ollama_ok and model_ok and psutil_ok and tqdm_ok
    
    if all_ok:
        print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print("üöÄ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å: python run.py")
    else:
        print("‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´:")
        if not python_ok:
            print("   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+")
        if not pip_ok:
            print("   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pip")
        if not ollama_ok:
            print("   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama: https://ollama.ai")
        if not model_ok:
            print("   - –°–æ–∑–¥–∞–π—Ç–µ –º–æ–¥–µ–ª—å: ollama create t-pro-it-2.0-optimized -f Modelfile.optimized")
        if not psutil_ok or not tqdm_ok:
            print("   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")

if __name__ == "__main__":
    main() 